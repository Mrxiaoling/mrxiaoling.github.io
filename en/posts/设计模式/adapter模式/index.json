[{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode\r Code tabs Make it easy to switch between different code\njava\rjavascript\r\r1  System.out.println(\u0026#39;Hello World!\u0026#39;);\r  \r\r1  console.log(\u0026#39;Hello World!\u0026#39;);\r  \r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"c3a7395d19726e47\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r Tabs for general purpose Windows\rMacOS\rUbuntu\r\rWindows section 1  console.log(\u0026#39;Hello World!\u0026#39;);\r  ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\n\rMacOS section Hello world!\r\rUbuntu section Great!\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"5c92b60c8ec7870a\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Expand \r\rExpand me\r\rTitle contents\r\r \r\rExpand me2\r\rTitle2 contents2\r\r Alert Colored box\nthis is a text\rthis is a text\rthis is a text\rthis is a text\rNotice success text\r info text\r warning text\r error text\r ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":2,"section":"posts","tags":["shortcode"],"title":"Shortcodes","uri":"https://mrxiaoling.github.io/en/posts/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":3,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://mrxiaoling.github.io/en/posts/markdown-syntax/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\r  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\rMakefile CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r1 2 3 4 5  CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r  JSON 1 2 3  {\u0026#34;employees\u0026#34;:[\r{\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;},\r]}\r  Markdown 1 2 3  **bold** *italics* [link](www.example.com)\r  JavaScript 1  document.write(\u0026#39;Hello, world!\u0026#39;);\r  CSS 1 2 3  body {\rbackground-color: red;\r}\r  Objective C 1 2 3 4 5 6  #import \u0026lt;stdio.h\u0026gt;\r\rint main (void)\r{\rprintf (\u0026#34;Hello world!\\n\u0026#34;);\r}\r  Python 1  print \u0026#34;Hello, world!\u0026#34;\r  XML 1 2 3 4 5  \u0026lt;employees\u0026gt;\r\u0026lt;employee\u0026gt;\r\u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt;\r\u0026lt;/employee\u0026gt;\r\u0026lt;/employees\u0026gt;\r  Perl 1  print \u0026#34;Hello, World!\\n\u0026#34;;\r  Bash 1  echo \u0026#34;Hello World\u0026#34;\r  PHP 1  \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt;   CoffeeScript 1  console.log(“Hello world!”);\r  C# 1 2 3 4 5 6 7 8  using System;\rclass Program\r{\rpublic static void Main(string[] args)\r{\rConsole.WriteLine(\u0026#34;Hello, world!\u0026#34;);\r}\r}\r  C++ 1 2 3 4 5 6 7  #include \u0026lt;iostream.h\u0026gt;\r\rmain()\r{\rcout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;;\rreturn 0;\r}\r  SQL 1 2  SELECT column_name,column_name\rFROM table_name;\r  Go 1 2 3 4 5  package main\rimport \u0026#34;fmt\u0026#34;\rfunc main() {\rfmt.Println(\u0026#34;Hello, 世界\u0026#34;)\r}\r  Ruby 1  puts \u0026#34;Hello, world!\u0026#34;\r  Java 1 2 3 4 5 6 7 8 9 10 11 12  import javax.swing.JFrame; //Importing class JFrame\rimport javax.swing.JLabel; //Importing class JLabel\rpublic class HelloWorld {\rpublic static void main(String[] args) {\rJFrame frame = new JFrame(); //Creating frame\r frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame\r frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame\r frame.pack(); //Setting size to smallest\r frame.setLocationRelativeTo(null); //Centering frame\r frame.setVisible(true); //Showing frame\r }\r}\r  Latex Equation 1  \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x).\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import {x, y} as p from \u0026#39;point\u0026#39;;\rconst ANSWER = 42;\rclass Car extends Vehicle {\rconstructor(speed, cost) {\rsuper(speed);\rvar c = Symbol(\u0026#39;cost\u0026#39;);\rthis[c] = cost;\rthis.intro = `This is a car runs at\r${speed}.`;\r}\r}\rfor (let num of [1, 2, 3]) {\rconsole.log(num + 0b111110111);\r}\rfunction $initHighlight(block, flags) {\rtry {\rif (block.className.search(/\\bno\\-highlight\\b/) != -1)\rreturn processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;;\r} catch (e) {\r/* handle exception */\rvar e4x =\r\u0026lt;div\u0026gt;Example\r\u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;;\r }\rfor (var i = 0 / 2; i \u0026lt; classes.length; i++) {\r// \u0026#34;0 / 2\u0026#34; should not be parsed as regexp\r if (checkCondition(classes[i]) === undefined)\rreturn /\\d+[\\s/]/g;\r}\rconsole.log(Array.every(classes, Boolean));\r}\rexport $initHighlight;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt;\r\u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt;\r\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  /*********************************************************\r* General\r*/\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rcolor: #5c6e74;\rfont-size: 13px;\rtext-shadow: none;\rfont-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace;\rdirection: ltr;\rtext-align: left;\rwhite-space: pre;\rword-spacing: normal;\rword-break: normal;\rline-height: 1.5;\rtab-size: 4;\rhyphens: none;\r}\rpre[class*=\u0026#34;language-\u0026#34;]::selection,\rcode::selection {\rtext-shadow: none;\rbackground: #b3d4fc;\r}\r@media print {\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rtext-shadow: none;\r}\r}\rpre[class*=\u0026#34;language-\u0026#34;] {\rpadding: 1em;\rmargin: .5em 0;\roverflow: auto;\rbackground: #f8f5ec;\r}\r:not(pre) \u0026gt; code {\rpadding: .1em .3em;\rborder-radius: .3em;\rcolor: #db4c69;\rbackground: #f9f2f4;\r}\r  ","description":"Syntax highlighting test","id":4,"section":"posts","tags":["hugo"],"title":"Syntax highlighting","uri":"https://mrxiaoling.github.io/en/posts/syntax-highlight/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)\r Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }}\r{{ partial \u0026quot;math.html\u0026quot; . }}\r{{ end }}\r To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } }\n$$\n","description":"A brief guide to setup KaTeX","id":5,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://mrxiaoling.github.io/en/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji {\rfont-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols;\r}  ","description":"Guide to emoji usage in Hugo","id":6,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://mrxiaoling.github.io/en/posts/emoji-support/"},{"content":"digraph G {\rsubgraph cluster_0 {\rstyle=filled;\rcolor=lightgrey;\rnode [style=filled,color=white];\ra0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3;\rlabel = \u0026quot;process #1\u0026quot;;\r}\rsubgraph cluster_1 {\rnode [style=filled];\rb0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3;\rlabel = \u0026quot;process #2\u0026quot;;\rcolor=blue\r}\rstart -\u0026gt; a0;\rstart -\u0026gt; b0;\ra1 -\u0026gt; b3;\rb2 -\u0026gt; a3;\ra3 -\u0026gt; a0;\ra3 -\u0026gt; end;\rb3 -\u0026gt; end;\rstart [shape=Mdiamond];\rend [shape=Msquare];\r}\r","description":"A hack to put Graphviz on the web.","id":7,"section":"posts","tags":[""],"title":"Viz support","uri":"https://mrxiaoling.github.io/en/posts/test-viz/"},{"content":"{ \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;},\r{\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]},\r{\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;},\r{},\r{\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;}\r]}\r","description":"WaveDrom is a Free and Open Source online digital timing diagram (waveform) rendering engine that uses javascript, HTML5 and SVG to convert a WaveJSON input text description into SVG vector graphics.","id":8,"section":"posts","tags":[""],"title":"Wavedrom support","uri":"https://mrxiaoling.github.io/en/posts/test-wavedrom/"},{"content":"{\r\u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8]\r}]\r}\r}\r{\r\u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [\r{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot;\r},\r{\r\u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;,\r\u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot;\r}\r]\r}\r}\r","description":"Simple yet flexible JavaScript charting for designers \u0026 developers","id":9,"section":"posts","tags":[""],"title":"Chart support","uri":"https://mrxiaoling.github.io/en/posts/test-chartjs/"},{"content":"Alice-\u0026gt;Bob: Hello Bob, how are you?\rNote right of Bob: Bob thinks\rBob--\u0026gt;Alice: I am good thanks!\rTitle: Here is a title\rA-\u0026gt;B: Normal line\rB--\u0026gt;C: Dashed line\rC-\u0026gt;\u0026gt;D: Open arrow\rD--\u0026gt;\u0026gt;A: Dashed open arrow\r","description":"Generates UML sequence diagrams from simple text","id":10,"section":"posts","tags":[""],"title":"JS Sequence Diagram support","uri":"https://mrxiaoling.github.io/en/posts/test-js-sequence-diagrams/"},{"content":"graph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\rsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\rpie\r\u0026quot;Dogs\u0026quot; : 386\r\u0026quot;Cats\u0026quot; : 85\r\u0026quot;Rats\u0026quot; : 15 ","description":"Generate diagrams, charts, graphs or flows from markdown-like text via javascript.","id":11,"section":"posts","tags":["diagram"],"title":"Mermaid support","uri":"https://mrxiaoling.github.io/en/posts/test-mermaid/"},{"content":"When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n","description":"A JavaScript display engine for mathematics that works in all browsers.No more setup for readers. It just works.","id":12,"section":"posts","tags":[""],"title":"MathJax support","uri":"https://mrxiaoling.github.io/en/posts/test-mathjax/"},{"content":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\nNote: For inline math to render correctly, your content file extension must be .mmark. See the official mmark site.\nInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\rInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\nBlock math:\r$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\rBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.","id":13,"section":"posts","tags":[""],"title":"Katex support","uri":"https://mrxiaoling.github.io/en/posts/test-katex/"},{"content":"st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank]\re=\u0026gt;end: End|future:\u0026gt;http://www.google.com\rop1=\u0026gt;operation: My Operation|past\rop2=\u0026gt;operation: Stuff|current\rsub1=\u0026gt;subroutine: My Subroutine|invalid\rcond=\u0026gt;condition: Yes\ror No?|approved:\u0026gt;http://www.google.com\rc2=\u0026gt;condition: Good idea|rejected\rio=\u0026gt;inputoutput: catch something...|future\rst-\u0026gt;op1(right)-\u0026gt;cond\rcond(yes, right)-\u0026gt;c2\rcond(no)-\u0026gt;sub1(left)-\u0026gt;op1\rc2(yes)-\u0026gt;io-\u0026gt;e\rc2(no)-\u0026gt;op2-\u0026gt;e\r","description":"flowchart.js is a flowchart DSL and SVG render that runs in the browser and terminal. Nodes and connections are defined in separately so that nodes can be reused and connections can be quickly changed.","id":14,"section":"posts","tags":[""],"title":"Flowchart support","uri":"https://mrxiaoling.github.io/en/posts/test-flowchart/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":15,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://mrxiaoling.github.io/en/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":16,"section":"gallery","tags":null,"title":"Photo","uri":"https://mrxiaoling.github.io/en/gallery/photo/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":21,"section":"","tags":null,"title":"About","uri":"https://mrxiaoling.github.io/en/about/"},{"content":"Adapter模式  参考：1.《图解设计模式》\n  在现实生活中，适配器很常见，比如电子产品的供电电压电流都有一个额定值，像直流5V1A，5V2A等，但是家庭用电只能提供交流220V，所以需要一个适配器将交流220Vzhuanhuan 在程序中，经常存在现有的程序无法直接使用，需要做适当的变换后才能使用。这种用于填补现有的程序和所需的程序之间差异的设计模式就是Adapter模式  什么时候使用适配器模式？   很多时候，我们并非从零开始编程，经常会用到现有的类，特别是当现有的类已经被充分测试过，BUG很少，而且用于其他软件时，更愿意将这些类作为组件重复使用。\n  Adapter模式有两种\n   类适配器模式（使用继承的适配器） 对象适配器模式（使用委托的适配器）  JDK里的Adapter模式 java.util.Arrays#asList()\njavax.swing.JTable(TableModel)\njava.io.InputStreamReader(InputStream)\njava.io.OutputStreamWriter(OutputStream)\njavax.xml.bind.annotation.adapters.XmlAdapter#marshal()\njavax.xml.bind.annotation.adapters.XmlAdapter#unmarshal()\n\r\rInputStreamReader\r\rInputStreamReade注释里写道：\n An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified （InputStreamReader是从字节流到字符流的桥梁：它读取字节并使用指定的字节将其解码为字符） \r\r\n\r\rArrays\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14  /**\r* Returns a fixed-size list backed by the specified array. (Changes to\r* the returned list \u0026#34;write through\u0026#34; to the array.) This method acts\r* as bridge between array-based and collection-based APIs, in\r* combination with {@link Collection#toArray}. *返回由指定数组支持的固定大小的列表。此方法与{@link Collection＃toArray}结合使用，\r*充当基于数组的API和基于集合的API之间的桥梁。\r*The returned list is serializable and implements {@link RandomAccess}.\r*/\r@SafeVarargs\r@SuppressWarnings(\u0026#34;varargs\u0026#34;)\rpublic static \u0026lt;T\u0026gt; List\u0026lt;T\u0026gt; asList(T... a) {\rreturn new ArrayList\u0026lt;\u0026gt;(a);\r}\r  \r\r\n类适配器模式 UML类图如下 各部分代码如下 1 2 3 4 5 6 7  /**\r* “需求”接口，比如说“转换为直流12V”\r*/\rpublic interface Print {\rpublic abstract void printWeak() ;\rpublic abstract void printStrong() ;\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  /**\r* 现有条件，比如交流220V\r*/\rpublic class Banner {\rprivate String string;\rpublic Banner (String string) {\rthis.string = string ;\r}\rpublic void showWithParen() {\rSystem.out.println(\u0026#34;(\u0026#34; + string + \u0026#34;)\u0026#34;);\r}\rpublic void showWithAster() {\rSystem.out.println(\u0026#34;*\u0026#34; + string + \u0026#34;*\u0026#34;);\r}\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  /**\r* 适配器，负责将现有的（Banner）转换成需求（Print）\r*/\rpublic class PrintBanner extends Banner implements Print {\rpublic PrintBanner (String string) {\rsuper(string);\r}\r@Override\rpublic void printWeak() {\rshowWithParen();\r}\r@Override\rpublic void printStrong() {\rshowWithAster();\r}\r}\r  1 2 3 4 5 6 7  public class Main {\rpublic static void main(String[] args) {\rPrint p = new PrintBanner(\u0026#34;Hello\u0026#34;) ;\rp.printStrong();\rp.printWeak();\r}\r}\r  代码分析 在Main类中将PrintBanner类的实例保存在了Print类型的变量中，对Main类的代码而言。Banner类、showWithParen方法和showWithAster方法被完全隐藏起来了，就好比只需要知道设备在5V1A就能正常充电，而220V怎么转换成5V的过程并不关心，这样就可以不用对Main类进行修改的情况下改变Printbanner类的具体实现。\n对象适配器 UML类图如下 各部分代码如下  Main类和Banner同上  1 2 3 4  public abstract class Print {\rpublic abstract void printWeak() ;\rpublic abstract void printStrong() ;\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public class PrintBanner extends Print {\rprivate Banner banner;\rpublic PrintBanner (String string) {\rthis.banner = new Banner(string);\r}\r@Override\rpublic void printWeak() {\rbanner.showWithParen();\r}\r@Override\rpublic void printStrong() {\rbanner.showWithAster();\r}\r}\r  ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":25,"section":"posts","tags":["设计模式"],"title":"Adapter模式","uri":"https://mrxiaoling.github.io/en/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/adapter%E6%A8%A1%E5%BC%8F/"},{"content":"Iterator模式  参考：1.《图解设计模式》\n2. https://blog.csdn.net/Lammonpeter/article/details/82142020 3. JDK里的Iterator模式： https://www.cnblogs.com/tstd/p/5049338.html\n  Iterator模式适用于数据集合中按照顺序遍历集合；  为什么在遍历的时候要额外引入迭代器这种复杂的模式呢？  引入迭代器设计模式的一个重要理由是：将实现和遍历进行了分离，也就是说遍历的过程完全不依赖与你所选择的集合是如何实现的 ， 如果开发者换了其他的容器来承载数据，那么只需要修改集合的实现方式即可，完全不需要去修改遍历的过程代码，这就提高了代码的“可复用性”和“可靠性”。  JDK里的Iterator设计模式 可以看到他们都实现了Iterable接口，Iterable接口的代码如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  /**\r* Implementing this interface allows an object to be the target of\r* the \u0026#34;for-each loop\u0026#34; statement. */\rpublic interface Iterable\u0026lt;T\u0026gt; {\r/**\r* Returns an iterator over elements of type {@code T}.\r*\r* @return an Iterator.\r*/\rIterator\u0026lt;T\u0026gt;\rIterator\u0026lt;T\u0026gt; iterator();\rdefault void forEach(Consumer\u0026lt;? super T\u0026gt; action) {\rObjects.requireNonNull(action);\rfor (T t : this) {\raction.accept(t);\r}\r}\rdefault Spliterator\u0026lt;T\u0026gt; spliterator() {\rreturn Spliterators.spliteratorUnknownSize(iterator(), 0);\r}\r}\r  正如JDK注释里说的， 实现iterable接口的类可以使用“foreach”操作，然后并要求实现Iterator iterator()方法，该方法返回一个Iterator接口对象 ，所以使用这些集合时可以直接使用Iterator模式进行遍历\n1 2 3 4  ArrayList\u0026lt;String\u0026gt; arrayList = new ArrayList\u0026lt;\u0026gt;();\rarrayList.add(\u0026#34;a\u0026#34;);\rarrayList.add(\u0026#34;a\u0026#34;);\rIterator iterator = arrayList.iterator();\r  示例程序的UML类如下 实例程序代码如下 1 2 3 4 5 6  /**\r* 要遍历的集合的接口，实现该接口的类将成为可以保存多个元素的集合\r*/\rpublic interface Aggregate {\rpublic abstract Iterator iterator();\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  public class BookShelf implements Aggregate {\rprivate Book [] books ;\rprivate int last = 0;\rpublic BookShelf (int maxsize) {\rthis.books = new Book[maxsize];\r}\rpublic Book getBookAt(int index) {\rreturn books[index];\r}\rpublic void appendBook (Book book) {\rthis.books[last] = book ;\rlast++;\r}\rpublic int getLength() {\rreturn last ;\r}\r@Override\rpublic Iterator iterator() {\rreturn new BookShelfIterator(this);\r}\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  /**\r* 用于遍历书架集合里的书\r*/\rpublic class BookShelfIterator implements Iterator {\rprivate BookShelf bookShelf ;\rprivate int index ;\rpublic BookShelfIterator(BookShelf bookShelf) {\rthis.bookShelf = bookShelf ;\rthis.index = 0 ;\r}\r@Override\rpublic boolean hasNext() {\rif (index \u0026lt; bookShelf.getLength()) {\rreturn true;\r} else {\rreturn false;\r}\r}\r@Override\rpublic Object next() {\rBook book = bookShelf.getBookAt(index) ;\rindex ++;\rreturn book;\r}\r}\r  1 2 3 4 5 6 7 8 9 10 11  public class Book {\rprivate String name ;\rpublic Book (String name) {\rthis.name = name ;\r}\rpublic String getName() {\rreturn name;\r}\r}\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  /**\r*测试代码\r*/\rpublic class Main {\rpublic static void main(String[] args) {\rBookShelf bookShelf = new BookShelf(5);\rbookShelf.appendBook(new Book(\u0026#34;图解设计模式\u0026#34;));\rbookShelf.appendBook(new Book(\u0026#34;Java编程思想\u0026#34;));\rbookShelf.appendBook(new Book(\u0026#34;算法\u0026#34;));\rbookShelf.appendBook(new Book(\u0026#34;TCP/IP协议：卷1\u0026#34;));\rIterator iterator = bookShelf.iterator();\rwhile (iterator.hasNext()) {\rBook book = (Book) iterator.next();\rSystem.out.println(book.getName());\r}\r}\r}\r  核心代码  核心代码主要是BookShelfIterator类实现Iterator接口并重写hasNext()和next()方法：hasNext()方法用于检测集合遍历的边界条件，而next()方法则像是遍历指针。  ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":26,"section":"posts","tags":["设计模式"],"title":"Iterator模式","uri":"https://mrxiaoling.github.io/en/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/iterator%E6%A8%A1%E5%BC%8F/"},{"content":"Nginx 安装以及配置  参考链接： https://blog.csdn.net/stinkstone/article/details/78082748\n Centos7\rWindows\r\r1、 官网下载安装包 http://nginx.org/en/download.html 可以选择浏览器下载或者通过 wget 命令下载\n1 2  cd /usr/local\rwget http://nginx.org/download/nginx-1.16.1.tar.gz\r  2、 安装 Nginx 首先安装 Nginx 依赖库\n1 2 3 4 5 6 7  yum install gcc-c++\ryum install pcre\ryum install pcre-devel\ryum install zlib\ryum install zlib-devel\ryum install openssl\ryum install openssl-devel\r  解压安装包\n1  tar -zxvf nginx-1.16.1.tar.gz\r  执行安装，nginx 会默认安装到/usr/local/nginx 目录\n1 2  cd /usr/local/nginx-1.16.1.tar.gz\r./configure #执行./configure\r  如果执行成功，执行 make 和 make install 编译 Nginx\n1 2  make\rmake install\r  3、配置 Nginx 开机启动 1 2  cd /lib/systemd/system/\rvim nginx.service #创建nginx.service文件\r  文件内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13  [Unit]\rDescription=nginx\r After=network.target\r [Service]\rType=forking\r ExecStart=/usr/local/nginx/sbin/nginx\r ExecReload=/usr/local/nginx/sbin/nginx reload\r ExecStop=/usr/local/nginx/sbin/nginx quit\r PrivateTmp=true\r [Install]\rWantedBy=multi-user.target\r   执行 systemctl enable nginx.service 使 nginx 开机启动\n1  systemctl enable nginx.service\r  4、相关命令 1 2 3 4 5  systemctl start nginx.service #启动nginx\rsystemctl stop nginx.service #结束nginx\rsystemctl restart nginx.service #重启nginx\r  5、验证是否安装成功 输入http://服务器IP/ 如果能看到 nginx 的界面，就表示安装成功了，如果是本地机器访问，执行输入 localhost 即可\n6、Nginx 静态资源配置  切换到/usr/local/nginx/conf 目录，并打开 nginx.conf 文件  1 2  cd /usr/local/nginx/conf\rvi nginx.conf\r  \r1、下载安装包 http://nginx.org/en/download.html下载相应版本的windows安装包，解压到自己的文件夹下\n2、启动 Nginx 有很多种方法启动 nginx\n  直接双击 nginx.exe，双击后一个黑色的弹窗一闪而过\n  打开 cmd 命令窗口，切换到 nginx 解压目录下，输入命令 nginx.exe 或者 start nginx ，回车即可。\n  3、验证是否安装成功  输入http://服务器IP/ 如果能看到 nginx 的界面，就表示安装成功了，如果是本地机器访问，执行输入 localhost 即可。  4、Nginx 配置以及静态资源部署  进入 conf 文件，编辑 nginx.conf 文件\n 找到以下这段代码：\n 部署静态资源时直接将其复制到部署文件下即可，下面是我的博客静态资源\n  \r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"0d751410100e3590\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":27,"section":"posts","tags":["开发环境配置"],"title":"各种开发环境配置合集","uri":"https://mrxiaoling.github.io/en/posts/%E5%90%84%E7%A7%8D%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%9B%86%E5%90%88/"},{"content":"计算机网络概述  参考：《TCP/IP详解 卷1：协议》\nB站UP：湖科大教书匠 https://space.bilibili.com/360996402/\nOSI体系结构： https://blog.csdn.net/taotongning/article/details/81352985\nhttps://blog.csdn.net/qq_37954088/article/details/80171093\n 网络数据交互方法   三种交换方式：\n 电路交换 分组交换 报文交换    电路交换的 3 个步骤\n 建立连接（分配通信资源） 通话（一直占用通信资源） 释放连接（归还通信资源）   分组交换\n将待发送的资源分解成一定字节数的数字信息“块”独立通过网络，来自不同的块可以组合，而且以后可以分解，这被称为多路复用。  三种方式的对比  电路交换优点      优点 缺点     分组交换 1. 无需建立连接； 2. 线路利用率高； 3. 简化了存储管理； 4. 加速传输； 5. 减少出错率 1. 引起了转发时延； 2. 需要传输额外的信息，例如源地址，目的地址； 3. 对于数据报存在失序，丢失或重复分组的问题；对于虚电路服务，存在呼叫建立，数据传输和虚电路释放三个过程   电路交换 1. 时延小 ；2.有序传输 ；3. 无冲突； 4. 适用范围广； 5. 实用性强； 6. 控制简单 1. 建立连接时间长；2. 线路独占，使用效率低；3. 灵活性差； 4. 难以规格化   报文交换 1. 无需建立连接； 2. 动态分配线路； 3. 提高线路可靠性； 4. 提高线路利用率； 5. 提供多目标服务 1. 引起了转发时延； 2. 需要较大的存储空间； 3. 需要传输额外的信息。    网络的性能指标 带宽  用来表示网络的通信线路所能传送数据的能力，即单位时间内从网络中的某一点到另一点的最高速率，单位：b/s,kb/s,Mb/s,Gb/s,Tb/s。  速率 比特：计算机中数据量的单位，也是信息论中数据量的单位。一个比特就是二进制中的一个“0”或一个“1”，常见换算：\n 8bit = 1 Byte KB = 2^10B\nMB = K·KB=2^10·2^10B=2^20B\nGB=K·MB = 2^30B\nTB = K·GB = 2^40B  速率：连接在计算机网络的主机在传送比特的速率，也称为比特速率或数据率。\n  bit/s (b/s , bps)\nkb/s = 10^3 b/s\nMb/s = 10^3·10^3b/s\n  吞吐量  单位时间内通过某个网络（信道，接口）的数据量。  时延 网络时延=发送时延+传播时延+ 处理时延\n 发送时延：分组长度(b)/发送速率(b/s) 传播时延：信道长度(m)/电磁波传播速率(m/s) 处理时延：不容易计算  时延带宽积  时延带宽积 = 传播时延*带宽 又称以比特为单位的链路长度  往返时间（Round-Trip Time）  双向交互一次所需要的的时间  利用率  利用率包括信道利用率和网络利用率 信道利用率：表示信道有百分之几的时间是有数据通过的； 网络利用率： 全网络的信道利用率的加权平均  利用率并非越高越好——————根据排队论，该信息引起的时延会迅速增加\r丢包率  即分组丢失率，指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率 分组丢失的两种主要情况：   分组在传输过程中出现误码，被结点丢弃； 分组在到达另一台队列已满的分组交换机时被丢弃；在通信量较大时就可能造成网络拥塞。  计算机网络体系结构分层 TCP/IP体系结构   TCP/IP体系结构的五层分别为：应用层、传输层、网络层、数据链路层、物理层\n  其中物理层可以归为硬件技术，数据链路层，网络层和传输层可以归为系统层，而应用层可以归为用户层。\n物理层\r数据链路层\r网络层\r传输层\r应用层\r总结\r\r 字面意思解释：物理传输、硬件、物理特性。狭义意思可以是光缆、电缆、双绞线和无线电波这些传输介质、物理接口，中间传的是电信号或光信号 \r\r 标志网络中的各主机（主机编码问题，例如MAC地址） 从信号所表示的一串比特流中区分出地址和数据 协调各主机争用总线\n \r\r 标志各网络以及网络中的各主机（网络和主机共同编址的问题，例如IP地址） 路由器如何转发分组，如何进行路由选择\n \r\r  传输层是负责在会话进程之间建和维护端——端连接的，实现网络环境中分布式通信。\n  解决进程之间基于网络的通信问题\n  出现传输错误时，如何处理\n  \r 通过应用进程间的交互来完成特定的网络应用\n \r\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"41ff45eac6c30962\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r\n  OSI体系结构  OSI体系结构的七层分别为：应用层、传输层、网络层、数据链路层、会话层、表示层、物理层  ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":28,"section":"posts","tags":["网络协议"],"title":"计算机网络概述","uri":"https://mrxiaoling.github.io/en/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/"}]